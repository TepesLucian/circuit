[{"name":"abstract fun Content(state: UiState, modifier: Modifier)","description":"com.slack.circuit.runtime.ui.Ui.Content","location":"circuit-runtime-ui/com.slack.circuit.runtime.ui/-ui/-content.html","searchKeys":["Content","abstract fun Content(state: UiState, modifier: Modifier)","com.slack.circuit.runtime.ui.Ui.Content"]},{"name":"abstract fun create(screen: Screen, context: CircuitContext): Ui<*>?","description":"com.slack.circuit.runtime.ui.Ui.Factory.create","location":"circuit-runtime-ui/com.slack.circuit.runtime.ui/-ui/-factory/create.html","searchKeys":["create","abstract fun create(screen: Screen, context: CircuitContext): Ui<*>?","com.slack.circuit.runtime.ui.Ui.Factory.create"]},{"name":"fun interface Factory","description":"com.slack.circuit.runtime.ui.Ui.Factory","location":"circuit-runtime-ui/com.slack.circuit.runtime.ui/-ui/-factory/index.html","searchKeys":["Factory","fun interface Factory","com.slack.circuit.runtime.ui.Ui.Factory"]},{"name":"inline fun <UiState : CircuitUiState> ui(crossinline body: (state: UiState, modifier: Modifier) -> Unit): Ui<UiState>","description":"com.slack.circuit.runtime.ui.ui","location":"circuit-runtime-ui/com.slack.circuit.runtime.ui/ui.html","searchKeys":["ui","inline fun <UiState : CircuitUiState> ui(crossinline body: (state: UiState, modifier: Modifier) -> Unit): Ui<UiState>","com.slack.circuit.runtime.ui.ui"]},{"name":"interface Ui<UiState : CircuitUiState>","description":"com.slack.circuit.runtime.ui.Ui","location":"circuit-runtime-ui/com.slack.circuit.runtime.ui/-ui/index.html","searchKeys":["Ui","interface Ui<UiState : CircuitUiState>","com.slack.circuit.runtime.ui.Ui"]},{"name":"abstract fun consumeValue(key: String): Any?","description":"com.slack.circuit.retained.RetainedStateRegistry.consumeValue","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/consume-value.html","searchKeys":["consumeValue","abstract fun consumeValue(key: String): Any?","com.slack.circuit.retained.RetainedStateRegistry.consumeValue"]},{"name":"abstract fun forgetUnclaimedValues()","description":"com.slack.circuit.retained.RetainedStateRegistry.forgetUnclaimedValues","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/forget-unclaimed-values.html","searchKeys":["forgetUnclaimedValues","abstract fun forgetUnclaimedValues()","com.slack.circuit.retained.RetainedStateRegistry.forgetUnclaimedValues"]},{"name":"abstract fun performSave()","description":"com.slack.circuit.retained.RetainedStateRegistry.performSave","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/perform-save.html","searchKeys":["performSave","abstract fun performSave()","com.slack.circuit.retained.RetainedStateRegistry.performSave"]},{"name":"abstract fun registerValue(key: String, valueProvider: () -> Any?): RetainedStateRegistry.Entry","description":"com.slack.circuit.retained.RetainedStateRegistry.registerValue","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/register-value.html","searchKeys":["registerValue","abstract fun registerValue(key: String, valueProvider: () -> Any?): RetainedStateRegistry.Entry","com.slack.circuit.retained.RetainedStateRegistry.registerValue"]},{"name":"abstract fun unregister()","description":"com.slack.circuit.retained.RetainedStateRegistry.Entry.unregister","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/-entry/unregister.html","searchKeys":["unregister","abstract fun unregister()","com.slack.circuit.retained.RetainedStateRegistry.Entry.unregister"]},{"name":"fun <T : Any> rememberRetained(vararg inputs: Any?, key: String? = null, init: () -> T): T","description":"com.slack.circuit.retained.rememberRetained","location":"circuit-retained/com.slack.circuit.retained/remember-retained.html","searchKeys":["rememberRetained","fun <T : Any> rememberRetained(vararg inputs: Any?, key: String? = null, init: () -> T): T","com.slack.circuit.retained.rememberRetained"]},{"name":"fun <T> produceRetainedState(initialValue: T, key1: Any?, key2: Any?, key3: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"com.slack.circuit.retained.produceRetainedState","location":"circuit-retained/com.slack.circuit.retained/produce-retained-state.html","searchKeys":["produceRetainedState","fun <T> produceRetainedState(initialValue: T, key1: Any?, key2: Any?, key3: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","com.slack.circuit.retained.produceRetainedState"]},{"name":"fun <T> produceRetainedState(initialValue: T, key1: Any?, key2: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"com.slack.circuit.retained.produceRetainedState","location":"circuit-retained/com.slack.circuit.retained/produce-retained-state.html","searchKeys":["produceRetainedState","fun <T> produceRetainedState(initialValue: T, key1: Any?, key2: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","com.slack.circuit.retained.produceRetainedState"]},{"name":"fun <T> produceRetainedState(initialValue: T, key1: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"com.slack.circuit.retained.produceRetainedState","location":"circuit-retained/com.slack.circuit.retained/produce-retained-state.html","searchKeys":["produceRetainedState","fun <T> produceRetainedState(initialValue: T, key1: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","com.slack.circuit.retained.produceRetainedState"]},{"name":"fun <T> produceRetainedState(initialValue: T, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"com.slack.circuit.retained.produceRetainedState","location":"circuit-retained/com.slack.circuit.retained/produce-retained-state.html","searchKeys":["produceRetainedState","fun <T> produceRetainedState(initialValue: T, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","com.slack.circuit.retained.produceRetainedState"]},{"name":"fun <T> produceRetainedState(initialValue: T, vararg keys: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"com.slack.circuit.retained.produceRetainedState","location":"circuit-retained/com.slack.circuit.retained/produce-retained-state.html","searchKeys":["produceRetainedState","fun <T> produceRetainedState(initialValue: T, vararg keys: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","com.slack.circuit.retained.produceRetainedState"]},{"name":"fun RetainedStateRegistry(values: Map<String, List<Any?>>?): RetainedStateRegistry","description":"com.slack.circuit.retained.RetainedStateRegistry","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry.html","searchKeys":["RetainedStateRegistry","fun RetainedStateRegistry(values: Map<String, List<Any?>>?): RetainedStateRegistry","com.slack.circuit.retained.RetainedStateRegistry"]},{"name":"fun continuityRetainedStateRegistry(key: String = Continuity.KEY, factory: ViewModelProvider.Factory = Continuity.Factory): RetainedStateRegistry","description":"com.slack.circuit.retained.continuityRetainedStateRegistry","location":"circuit-retained/com.slack.circuit.retained/continuity-retained-state-registry.html","searchKeys":["continuityRetainedStateRegistry","fun continuityRetainedStateRegistry(key: String = Continuity.KEY, factory: ViewModelProvider.Factory = Continuity.Factory): RetainedStateRegistry","com.slack.circuit.retained.continuityRetainedStateRegistry"]},{"name":"interface Entry","description":"com.slack.circuit.retained.RetainedStateRegistry.Entry","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/-entry/index.html","searchKeys":["Entry","interface Entry","com.slack.circuit.retained.RetainedStateRegistry.Entry"]},{"name":"interface RetainedStateRegistry","description":"com.slack.circuit.retained.RetainedStateRegistry","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/index.html","searchKeys":["RetainedStateRegistry","interface RetainedStateRegistry","com.slack.circuit.retained.RetainedStateRegistry"]},{"name":"val LocalRetainedStateRegistry: ProvidableCompositionLocal<RetainedStateRegistry>","description":"com.slack.circuit.retained.LocalRetainedStateRegistry","location":"circuit-retained/com.slack.circuit.retained/-local-retained-state-registry.html","searchKeys":["LocalRetainedStateRegistry","val LocalRetainedStateRegistry: ProvidableCompositionLocal<RetainedStateRegistry>","com.slack.circuit.retained.LocalRetainedStateRegistry"]},{"name":"class CircuitSymbolProcessorProvider : SymbolProcessorProvider","description":"com.slack.circuit.codegen.CircuitSymbolProcessorProvider","location":"circuit-codegen/com.slack.circuit.codegen/-circuit-symbol-processor-provider/index.html","searchKeys":["CircuitSymbolProcessorProvider","class CircuitSymbolProcessorProvider : SymbolProcessorProvider","com.slack.circuit.codegen.CircuitSymbolProcessorProvider"]},{"name":"constructor()","description":"com.slack.circuit.codegen.CircuitSymbolProcessorProvider.CircuitSymbolProcessorProvider","location":"circuit-codegen/com.slack.circuit.codegen/-circuit-symbol-processor-provider/-circuit-symbol-processor-provider.html","searchKeys":["CircuitSymbolProcessorProvider","constructor()","com.slack.circuit.codegen.CircuitSymbolProcessorProvider.CircuitSymbolProcessorProvider"]},{"name":"open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","description":"com.slack.circuit.codegen.CircuitSymbolProcessorProvider.create","location":"circuit-codegen/com.slack.circuit.codegen/-circuit-symbol-processor-provider/create.html","searchKeys":["create","open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","com.slack.circuit.codegen.CircuitSymbolProcessorProvider.create"]},{"name":"abstract fun Content(navigator: OverlayNavigator<Result>)","description":"com.slack.circuit.overlay.Overlay.Content","location":"circuit-overlay/com.slack.circuit.overlay/-overlay/-content.html","searchKeys":["Content","abstract fun Content(navigator: OverlayNavigator<Result>)","com.slack.circuit.overlay.Overlay.Content"]},{"name":"abstract fun finish(result: Result)","description":"com.slack.circuit.overlay.OverlayHostData.finish","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-host-data/finish.html","searchKeys":["finish","abstract fun finish(result: Result)","com.slack.circuit.overlay.OverlayHostData.finish"]},{"name":"abstract fun finish(result: Result)","description":"com.slack.circuit.overlay.OverlayNavigator.finish","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-navigator/finish.html","searchKeys":["finish","abstract fun finish(result: Result)","com.slack.circuit.overlay.OverlayNavigator.finish"]},{"name":"abstract suspend fun <Result : Any> show(overlay: Overlay<Result>): Result","description":"com.slack.circuit.overlay.OverlayHost.show","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-host/show.html","searchKeys":["show","abstract suspend fun <Result : Any> show(overlay: Overlay<Result>): Result","com.slack.circuit.overlay.OverlayHost.show"]},{"name":"abstract val currentOverlayData: OverlayHostData<Any>?","description":"com.slack.circuit.overlay.OverlayHost.currentOverlayData","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-host/current-overlay-data.html","searchKeys":["currentOverlayData","abstract val currentOverlayData: OverlayHostData<Any>?","com.slack.circuit.overlay.OverlayHost.currentOverlayData"]},{"name":"abstract val overlay: Overlay<Result>","description":"com.slack.circuit.overlay.OverlayHostData.overlay","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-host-data/overlay.html","searchKeys":["overlay","abstract val overlay: Overlay<Result>","com.slack.circuit.overlay.OverlayHostData.overlay"]},{"name":"fun ContentWithOverlays(modifier: Modifier = Modifier, overlayHost: OverlayHost = rememberOverlayHost(), content: () -> Unit)","description":"com.slack.circuit.overlay.ContentWithOverlays","location":"circuit-overlay/com.slack.circuit.overlay/-content-with-overlays.html","searchKeys":["ContentWithOverlays","fun ContentWithOverlays(modifier: Modifier = Modifier, overlayHost: OverlayHost = rememberOverlayHost(), content: () -> Unit)","com.slack.circuit.overlay.ContentWithOverlays"]},{"name":"fun interface OverlayNavigator<Result : Any>","description":"com.slack.circuit.overlay.OverlayNavigator","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-navigator/index.html","searchKeys":["OverlayNavigator","fun interface OverlayNavigator<Result : Any>","com.slack.circuit.overlay.OverlayNavigator"]},{"name":"fun rememberOverlayHost(): OverlayHost","description":"com.slack.circuit.overlay.rememberOverlayHost","location":"circuit-overlay/com.slack.circuit.overlay/remember-overlay-host.html","searchKeys":["rememberOverlayHost","fun rememberOverlayHost(): OverlayHost","com.slack.circuit.overlay.rememberOverlayHost"]},{"name":"interface Overlay<Result : Any>","description":"com.slack.circuit.overlay.Overlay","location":"circuit-overlay/com.slack.circuit.overlay/-overlay/index.html","searchKeys":["Overlay","interface Overlay<Result : Any>","com.slack.circuit.overlay.Overlay"]},{"name":"interface OverlayHost","description":"com.slack.circuit.overlay.OverlayHost","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-host/index.html","searchKeys":["OverlayHost","interface OverlayHost","com.slack.circuit.overlay.OverlayHost"]},{"name":"interface OverlayHostData<Result : Any>","description":"com.slack.circuit.overlay.OverlayHostData","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-host-data/index.html","searchKeys":["OverlayHostData","interface OverlayHostData<Result : Any>","com.slack.circuit.overlay.OverlayHostData"]},{"name":"val LocalOverlayHost: ProvidableCompositionLocal<OverlayHost>","description":"com.slack.circuit.overlay.LocalOverlayHost","location":"circuit-overlay/com.slack.circuit.overlay/-local-overlay-host.html","searchKeys":["LocalOverlayHost","val LocalOverlayHost: ProvidableCompositionLocal<OverlayHost>","com.slack.circuit.overlay.LocalOverlayHost"]},{"name":"class FakeNavigator : Navigator","description":"com.slack.circuit.test.FakeNavigator","location":"circuit-test/com.slack.circuit.test/-fake-navigator/index.html","searchKeys":["FakeNavigator","class FakeNavigator : Navigator","com.slack.circuit.test.FakeNavigator"]},{"name":"constructor()","description":"com.slack.circuit.test.FakeNavigator.FakeNavigator","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-fake-navigator.html","searchKeys":["FakeNavigator","constructor()","com.slack.circuit.test.FakeNavigator.FakeNavigator"]},{"name":"fun assertIsEmpty()","description":"com.slack.circuit.test.FakeNavigator.assertIsEmpty","location":"circuit-test/com.slack.circuit.test/-fake-navigator/assert-is-empty.html","searchKeys":["assertIsEmpty","fun assertIsEmpty()","com.slack.circuit.test.FakeNavigator.assertIsEmpty"]},{"name":"fun expectNoEvents()","description":"com.slack.circuit.test.FakeNavigator.expectNoEvents","location":"circuit-test/com.slack.circuit.test/-fake-navigator/expect-no-events.html","searchKeys":["expectNoEvents","fun expectNoEvents()","com.slack.circuit.test.FakeNavigator.expectNoEvents"]},{"name":"fun takeNextScreen(): Screen","description":"com.slack.circuit.test.FakeNavigator.takeNextScreen","location":"circuit-test/com.slack.circuit.test/-fake-navigator/take-next-screen.html","searchKeys":["takeNextScreen","fun takeNextScreen(): Screen","com.slack.circuit.test.FakeNavigator.takeNextScreen"]},{"name":"open override fun goTo(screen: Screen)","description":"com.slack.circuit.test.FakeNavigator.goTo","location":"circuit-test/com.slack.circuit.test/-fake-navigator/go-to.html","searchKeys":["goTo","open override fun goTo(screen: Screen)","com.slack.circuit.test.FakeNavigator.goTo"]},{"name":"open override fun pop(): Screen?","description":"com.slack.circuit.test.FakeNavigator.pop","location":"circuit-test/com.slack.circuit.test/-fake-navigator/pop.html","searchKeys":["pop","open override fun pop(): Screen?","com.slack.circuit.test.FakeNavigator.pop"]},{"name":"open override fun resetRoot(newRoot: Screen): List<Screen>","description":"com.slack.circuit.test.FakeNavigator.resetRoot","location":"circuit-test/com.slack.circuit.test/-fake-navigator/reset-root.html","searchKeys":["resetRoot","open override fun resetRoot(newRoot: Screen): List<Screen>","com.slack.circuit.test.FakeNavigator.resetRoot"]},{"name":"suspend fun <UiState : CircuitUiState> Presenter<UiState>.test(timeout: Duration? = null, name: String? = null, block: suspend ReceiveTurbine<UiState>.() -> Unit)","description":"com.slack.circuit.test.test","location":"circuit-test/com.slack.circuit.test/test.html","searchKeys":["test","suspend fun <UiState : CircuitUiState> Presenter<UiState>.test(timeout: Duration? = null, name: String? = null, block: suspend ReceiveTurbine<UiState>.() -> Unit)","com.slack.circuit.test.test"]},{"name":"suspend fun <UiState : CircuitUiState> presenterTestOf(presentFunction: () -> UiState, timeout: Duration? = null, name: String? = null, block: suspend ReceiveTurbine<UiState>.() -> Unit)","description":"com.slack.circuit.test.presenterTestOf","location":"circuit-test/com.slack.circuit.test/presenter-test-of.html","searchKeys":["presenterTestOf","suspend fun <UiState : CircuitUiState> presenterTestOf(presentFunction: () -> UiState, timeout: Duration? = null, name: String? = null, block: suspend ReceiveTurbine<UiState>.() -> Unit)","com.slack.circuit.test.presenterTestOf"]},{"name":"suspend fun awaitNextScreen(): Screen","description":"com.slack.circuit.test.FakeNavigator.awaitNextScreen","location":"circuit-test/com.slack.circuit.test/-fake-navigator/await-next-screen.html","searchKeys":["awaitNextScreen","suspend fun awaitNextScreen(): Screen","com.slack.circuit.test.FakeNavigator.awaitNextScreen"]},{"name":"suspend fun awaitPop()","description":"com.slack.circuit.test.FakeNavigator.awaitPop","location":"circuit-test/com.slack.circuit.test/-fake-navigator/await-pop.html","searchKeys":["awaitPop","suspend fun awaitPop()","com.slack.circuit.test.FakeNavigator.awaitPop"]},{"name":"suspend fun awaitResetRoot(): Screen","description":"com.slack.circuit.test.FakeNavigator.awaitResetRoot","location":"circuit-test/com.slack.circuit.test/-fake-navigator/await-reset-root.html","searchKeys":["awaitResetRoot","suspend fun awaitResetRoot(): Screen","com.slack.circuit.test.FakeNavigator.awaitResetRoot"]},{"name":"abstract fun create(screen: Screen, navigator: Navigator, context: CircuitContext): Presenter<*>?","description":"com.slack.circuit.runtime.presenter.Presenter.Factory.create","location":"circuit-runtime-presenter/com.slack.circuit.runtime.presenter/-presenter/-factory/create.html","searchKeys":["create","abstract fun create(screen: Screen, navigator: Navigator, context: CircuitContext): Presenter<*>?","com.slack.circuit.runtime.presenter.Presenter.Factory.create"]},{"name":"abstract fun present(): UiState","description":"com.slack.circuit.runtime.presenter.Presenter.present","location":"circuit-runtime-presenter/com.slack.circuit.runtime.presenter/-presenter/present.html","searchKeys":["present","abstract fun present(): UiState","com.slack.circuit.runtime.presenter.Presenter.present"]},{"name":"fun interface Factory","description":"com.slack.circuit.runtime.presenter.Presenter.Factory","location":"circuit-runtime-presenter/com.slack.circuit.runtime.presenter/-presenter/-factory/index.html","searchKeys":["Factory","fun interface Factory","com.slack.circuit.runtime.presenter.Presenter.Factory"]},{"name":"inline fun <UiState : CircuitUiState> presenterOf(crossinline body: () -> UiState): Presenter<UiState>","description":"com.slack.circuit.runtime.presenter.presenterOf","location":"circuit-runtime-presenter/com.slack.circuit.runtime.presenter/presenter-of.html","searchKeys":["presenterOf","inline fun <UiState : CircuitUiState> presenterOf(crossinline body: () -> UiState): Presenter<UiState>","com.slack.circuit.runtime.presenter.presenterOf"]},{"name":"interface Presenter<UiState : CircuitUiState>","description":"com.slack.circuit.runtime.presenter.Presenter","location":"circuit-runtime-presenter/com.slack.circuit.runtime.presenter/-presenter/index.html","searchKeys":["Presenter","interface Presenter<UiState : CircuitUiState>","com.slack.circuit.runtime.presenter.Presenter"]},{"name":"abstract fun create(screen: Screen, context: CircuitContext): EventListener","description":"com.slack.circuit.foundation.EventListener.Factory.create","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/-factory/create.html","searchKeys":["create","abstract fun create(screen: Screen, context: CircuitContext): EventListener","com.slack.circuit.foundation.EventListener.Factory.create"]},{"name":"class Builder","description":"com.slack.circuit.foundation.CircuitConfig.Builder","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/index.html","searchKeys":["Builder","class Builder","com.slack.circuit.foundation.CircuitConfig.Builder"]},{"name":"class CircuitConfig","description":"com.slack.circuit.foundation.CircuitConfig","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/index.html","searchKeys":["CircuitConfig","class CircuitConfig","com.slack.circuit.foundation.CircuitConfig"]},{"name":"constructor()","description":"com.slack.circuit.foundation.CircuitConfig.Builder.Builder","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/-builder.html","searchKeys":["Builder","constructor()","com.slack.circuit.foundation.CircuitConfig.Builder.Builder"]},{"name":"constructor(newRoot: Screen)","description":"com.slack.circuit.foundation.NavEvent.ResetRoot.ResetRoot","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-reset-root/-reset-root.html","searchKeys":["ResetRoot","constructor(newRoot: Screen)","com.slack.circuit.foundation.NavEvent.ResetRoot.ResetRoot"]},{"name":"constructor(screen: Screen)","description":"com.slack.circuit.foundation.NavEvent.GoTo.GoTo","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-go-to/-go-to.html","searchKeys":["GoTo","constructor(screen: Screen)","com.slack.circuit.foundation.NavEvent.GoTo.GoTo"]},{"name":"data class GoTo(screen: Screen) : NavEvent","description":"com.slack.circuit.foundation.NavEvent.GoTo","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-go-to/index.html","searchKeys":["GoTo","data class GoTo(screen: Screen) : NavEvent","com.slack.circuit.foundation.NavEvent.GoTo"]},{"name":"data class ResetRoot(newRoot: Screen) : NavEvent","description":"com.slack.circuit.foundation.NavEvent.ResetRoot","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-reset-root/index.html","searchKeys":["ResetRoot","data class ResetRoot(newRoot: Screen) : NavEvent","com.slack.circuit.foundation.NavEvent.ResetRoot"]},{"name":"fun CircuitCompositionLocals(circuitConfig: CircuitConfig, content: () -> Unit)","description":"com.slack.circuit.foundation.CircuitCompositionLocals","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-composition-locals.html","searchKeys":["CircuitCompositionLocals","fun CircuitCompositionLocals(circuitConfig: CircuitConfig, content: () -> Unit)","com.slack.circuit.foundation.CircuitCompositionLocals"]},{"name":"fun CircuitContent(screen: Screen, modifier: Modifier = Modifier, circuitConfig: CircuitConfig = requireNotNull(LocalCircuitConfig.current), unavailableContent: (screen: Screen, modifier: Modifier) -> Unit = circuitConfig.onUnavailableContent)","description":"com.slack.circuit.foundation.CircuitContent","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-content.html","searchKeys":["CircuitContent","fun CircuitContent(screen: Screen, modifier: Modifier = Modifier, circuitConfig: CircuitConfig = requireNotNull(LocalCircuitConfig.current), unavailableContent: (screen: Screen, modifier: Modifier) -> Unit = circuitConfig.onUnavailableContent)","com.slack.circuit.foundation.CircuitContent"]},{"name":"fun CircuitContent(screen: Screen, modifier: Modifier = Modifier, onNavEvent: (event: NavEvent) -> Unit, circuitConfig: CircuitConfig = requireNotNull(LocalCircuitConfig.current), unavailableContent: (screen: Screen, modifier: Modifier) -> Unit = circuitConfig.onUnavailableContent)","description":"com.slack.circuit.foundation.CircuitContent","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-content.html","searchKeys":["CircuitContent","fun CircuitContent(screen: Screen, modifier: Modifier = Modifier, onNavEvent: (event: NavEvent) -> Unit, circuitConfig: CircuitConfig = requireNotNull(LocalCircuitConfig.current), unavailableContent: (screen: Screen, modifier: Modifier) -> Unit = circuitConfig.onUnavailableContent)","com.slack.circuit.foundation.CircuitContent"]},{"name":"fun CircuitContent(screen: Screen, navigator: Navigator, modifier: Modifier = Modifier, circuitConfig: CircuitConfig = requireNotNull(LocalCircuitConfig.current), unavailableContent: (screen: Screen, modifier: Modifier) -> Unit = circuitConfig.onUnavailableContent)","description":"com.slack.circuit.foundation.CircuitContent","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-content.html","searchKeys":["CircuitContent","fun CircuitContent(screen: Screen, navigator: Navigator, modifier: Modifier = Modifier, circuitConfig: CircuitConfig = requireNotNull(LocalCircuitConfig.current), unavailableContent: (screen: Screen, modifier: Modifier) -> Unit = circuitConfig.onUnavailableContent)","com.slack.circuit.foundation.CircuitContent"]},{"name":"fun NavigableCircuitContent(navigator: Navigator, backstack: SaveableBackStack, modifier: Modifier = Modifier, circuitConfig: CircuitConfig = requireNotNull(LocalCircuitConfig.current), providedValues: Map<out BackStack.Record, ProvidedValues> = providedValuesForBackStack(backstack), decoration: NavDecoration = circuitConfig.defaultNavDecoration, unavailableRoute: (screen: Screen, modifier: Modifier) -> Unit = circuitConfig.onUnavailableContent)","description":"com.slack.circuit.foundation.NavigableCircuitContent","location":"circuit-foundation/com.slack.circuit.foundation/-navigable-circuit-content.html","searchKeys":["NavigableCircuitContent","fun NavigableCircuitContent(navigator: Navigator, backstack: SaveableBackStack, modifier: Modifier = Modifier, circuitConfig: CircuitConfig = requireNotNull(LocalCircuitConfig.current), providedValues: Map<out BackStack.Record, ProvidedValues> = providedValuesForBackStack(backstack), decoration: NavDecoration = circuitConfig.defaultNavDecoration, unavailableRoute: (screen: Screen, modifier: Modifier) -> Unit = circuitConfig.onUnavailableContent)","com.slack.circuit.foundation.NavigableCircuitContent"]},{"name":"fun Navigator.onNavEvent(event: NavEvent)","description":"com.slack.circuit.foundation.onNavEvent","location":"circuit-foundation/com.slack.circuit.foundation/on-nav-event.html","searchKeys":["onNavEvent","fun Navigator.onNavEvent(event: NavEvent)","com.slack.circuit.foundation.onNavEvent"]},{"name":"fun SaveableBackStack.push(screen: Screen)","description":"com.slack.circuit.foundation.push","location":"circuit-foundation/com.slack.circuit.foundation/push.html","searchKeys":["push","fun SaveableBackStack.push(screen: Screen)","com.slack.circuit.foundation.push"]},{"name":"fun addPresenterFactories(factories: Iterable<Presenter.Factory>): CircuitConfig.Builder","description":"com.slack.circuit.foundation.CircuitConfig.Builder.addPresenterFactories","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/add-presenter-factories.html","searchKeys":["addPresenterFactories","fun addPresenterFactories(factories: Iterable<Presenter.Factory>): CircuitConfig.Builder","com.slack.circuit.foundation.CircuitConfig.Builder.addPresenterFactories"]},{"name":"fun addPresenterFactory(factory: Presenter.Factory): CircuitConfig.Builder","description":"com.slack.circuit.foundation.CircuitConfig.Builder.addPresenterFactory","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/add-presenter-factory.html","searchKeys":["addPresenterFactory","fun addPresenterFactory(factory: Presenter.Factory): CircuitConfig.Builder","com.slack.circuit.foundation.CircuitConfig.Builder.addPresenterFactory"]},{"name":"fun addPresenterFactory(vararg factory: Presenter.Factory): CircuitConfig.Builder","description":"com.slack.circuit.foundation.CircuitConfig.Builder.addPresenterFactory","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/add-presenter-factory.html","searchKeys":["addPresenterFactory","fun addPresenterFactory(vararg factory: Presenter.Factory): CircuitConfig.Builder","com.slack.circuit.foundation.CircuitConfig.Builder.addPresenterFactory"]},{"name":"fun addUiFactories(factories: Iterable<Ui.Factory>): CircuitConfig.Builder","description":"com.slack.circuit.foundation.CircuitConfig.Builder.addUiFactories","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/add-ui-factories.html","searchKeys":["addUiFactories","fun addUiFactories(factories: Iterable<Ui.Factory>): CircuitConfig.Builder","com.slack.circuit.foundation.CircuitConfig.Builder.addUiFactories"]},{"name":"fun addUiFactory(factory: Ui.Factory): CircuitConfig.Builder","description":"com.slack.circuit.foundation.CircuitConfig.Builder.addUiFactory","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/add-ui-factory.html","searchKeys":["addUiFactory","fun addUiFactory(factory: Ui.Factory): CircuitConfig.Builder","com.slack.circuit.foundation.CircuitConfig.Builder.addUiFactory"]},{"name":"fun addUiFactory(vararg factory: Ui.Factory): CircuitConfig.Builder","description":"com.slack.circuit.foundation.CircuitConfig.Builder.addUiFactory","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/add-ui-factory.html","searchKeys":["addUiFactory","fun addUiFactory(vararg factory: Ui.Factory): CircuitConfig.Builder","com.slack.circuit.foundation.CircuitConfig.Builder.addUiFactory"]},{"name":"fun build(): CircuitConfig","description":"com.slack.circuit.foundation.CircuitConfig.Builder.build","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/build.html","searchKeys":["build","fun build(): CircuitConfig","com.slack.circuit.foundation.CircuitConfig.Builder.build"]},{"name":"fun eventListenerFactory(factory: EventListener.Factory): CircuitConfig.Builder","description":"com.slack.circuit.foundation.CircuitConfig.Builder.eventListenerFactory","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/event-listener-factory.html","searchKeys":["eventListenerFactory","fun eventListenerFactory(factory: EventListener.Factory): CircuitConfig.Builder","com.slack.circuit.foundation.CircuitConfig.Builder.eventListenerFactory"]},{"name":"fun interface Factory","description":"com.slack.circuit.foundation.EventListener.Factory","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/-factory/index.html","searchKeys":["Factory","fun interface Factory","com.slack.circuit.foundation.EventListener.Factory"]},{"name":"fun newBuilder(): CircuitConfig.Builder","description":"com.slack.circuit.foundation.CircuitConfig.newBuilder","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/new-builder.html","searchKeys":["newBuilder","fun newBuilder(): CircuitConfig.Builder","com.slack.circuit.foundation.CircuitConfig.newBuilder"]},{"name":"fun nextPresenter(skipPast: Presenter.Factory?, screen: Screen, navigator: Navigator, context: CircuitContext): Presenter<*>?","description":"com.slack.circuit.foundation.CircuitConfig.nextPresenter","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/next-presenter.html","searchKeys":["nextPresenter","fun nextPresenter(skipPast: Presenter.Factory?, screen: Screen, navigator: Navigator, context: CircuitContext): Presenter<*>?","com.slack.circuit.foundation.CircuitConfig.nextPresenter"]},{"name":"fun nextUi(skipPast: Ui.Factory?, screen: Screen, context: CircuitContext): Ui<*>?","description":"com.slack.circuit.foundation.CircuitConfig.nextUi","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/next-ui.html","searchKeys":["nextUi","fun nextUi(skipPast: Ui.Factory?, screen: Screen, context: CircuitContext): Ui<*>?","com.slack.circuit.foundation.CircuitConfig.nextUi"]},{"name":"fun presenter(screen: Screen, navigator: Navigator, context: CircuitContext = CircuitContext(null).also { it.config = this }): Presenter<*>?","description":"com.slack.circuit.foundation.CircuitConfig.presenter","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/presenter.html","searchKeys":["presenter","fun presenter(screen: Screen, navigator: Navigator, context: CircuitContext = CircuitContext(null).also { it.config = this }): Presenter<*>?","com.slack.circuit.foundation.CircuitConfig.presenter"]},{"name":"fun rememberCircuitNavigator(backstack: SaveableBackStack, enableBackHandler: Boolean = true): Navigator","description":"com.slack.circuit.foundation.rememberCircuitNavigator","location":"circuit-foundation/com.slack.circuit.foundation/remember-circuit-navigator.html","searchKeys":["rememberCircuitNavigator","fun rememberCircuitNavigator(backstack: SaveableBackStack, enableBackHandler: Boolean = true): Navigator","com.slack.circuit.foundation.rememberCircuitNavigator"]},{"name":"fun rememberCircuitNavigator(backstack: SaveableBackStack, onRootPop: () -> Unit): Navigator","description":"com.slack.circuit.foundation.rememberCircuitNavigator","location":"circuit-foundation/com.slack.circuit.foundation/remember-circuit-navigator.html","searchKeys":["rememberCircuitNavigator","fun rememberCircuitNavigator(backstack: SaveableBackStack, onRootPop: () -> Unit): Navigator","com.slack.circuit.foundation.rememberCircuitNavigator"]},{"name":"fun setDefaultNavDecoration(decoration: NavDecoration): CircuitConfig.Builder","description":"com.slack.circuit.foundation.CircuitConfig.Builder.setDefaultNavDecoration","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/set-default-nav-decoration.html","searchKeys":["setDefaultNavDecoration","fun setDefaultNavDecoration(decoration: NavDecoration): CircuitConfig.Builder","com.slack.circuit.foundation.CircuitConfig.Builder.setDefaultNavDecoration"]},{"name":"fun setOnUnavailableContent(content: (screen: Screen, modifier: Modifier) -> Unit): CircuitConfig.Builder","description":"com.slack.circuit.foundation.CircuitConfig.Builder.setOnUnavailableContent","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/set-on-unavailable-content.html","searchKeys":["setOnUnavailableContent","fun setOnUnavailableContent(content: (screen: Screen, modifier: Modifier) -> Unit): CircuitConfig.Builder","com.slack.circuit.foundation.CircuitConfig.Builder.setOnUnavailableContent"]},{"name":"fun ui(screen: Screen, context: CircuitContext = CircuitContext(null).also { it.config = this }): Ui<*>?","description":"com.slack.circuit.foundation.CircuitConfig.ui","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/ui.html","searchKeys":["ui","fun ui(screen: Screen, context: CircuitContext = CircuitContext(null).also { it.config = this }): Ui<*>?","com.slack.circuit.foundation.CircuitConfig.ui"]},{"name":"interface EventListener","description":"com.slack.circuit.foundation.EventListener","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/index.html","searchKeys":["EventListener","interface EventListener","com.slack.circuit.foundation.EventListener"]},{"name":"interface NavEvent : CircuitUiEvent","description":"com.slack.circuit.foundation.NavEvent","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/index.html","searchKeys":["NavEvent","interface NavEvent : CircuitUiEvent","com.slack.circuit.foundation.NavEvent"]},{"name":"object Companion","description":"com.slack.circuit.foundation.EventListener.Companion","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/-companion/index.html","searchKeys":["Companion","object Companion","com.slack.circuit.foundation.EventListener.Companion"]},{"name":"object DefaultDecoration : NavDecoration","description":"com.slack.circuit.foundation.NavigatorDefaults.DefaultDecoration","location":"circuit-foundation/com.slack.circuit.foundation/-navigator-defaults/-default-decoration/index.html","searchKeys":["DefaultDecoration","object DefaultDecoration : NavDecoration","com.slack.circuit.foundation.NavigatorDefaults.DefaultDecoration"]},{"name":"object EmptyDecoration : NavDecoration","description":"com.slack.circuit.foundation.NavigatorDefaults.EmptyDecoration","location":"circuit-foundation/com.slack.circuit.foundation/-navigator-defaults/-empty-decoration/index.html","searchKeys":["EmptyDecoration","object EmptyDecoration : NavDecoration","com.slack.circuit.foundation.NavigatorDefaults.EmptyDecoration"]},{"name":"object NavigatorDefaults","description":"com.slack.circuit.foundation.NavigatorDefaults","location":"circuit-foundation/com.slack.circuit.foundation/-navigator-defaults/index.html","searchKeys":["NavigatorDefaults","object NavigatorDefaults","com.slack.circuit.foundation.NavigatorDefaults"]},{"name":"object Pop : NavEvent","description":"com.slack.circuit.foundation.NavEvent.Pop","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-pop/index.html","searchKeys":["Pop","object Pop : NavEvent","com.slack.circuit.foundation.NavEvent.Pop"]},{"name":"open fun dispose()","description":"com.slack.circuit.foundation.EventListener.dispose","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/dispose.html","searchKeys":["dispose","open fun dispose()","com.slack.circuit.foundation.EventListener.dispose"]},{"name":"open fun onAfterCreatePresenter(screen: Screen, navigator: Navigator, presenter: Presenter<*>?, context: CircuitContext)","description":"com.slack.circuit.foundation.EventListener.onAfterCreatePresenter","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-after-create-presenter.html","searchKeys":["onAfterCreatePresenter","open fun onAfterCreatePresenter(screen: Screen, navigator: Navigator, presenter: Presenter<*>?, context: CircuitContext)","com.slack.circuit.foundation.EventListener.onAfterCreatePresenter"]},{"name":"open fun onAfterCreateUi(screen: Screen, ui: Ui<*>?, context: CircuitContext)","description":"com.slack.circuit.foundation.EventListener.onAfterCreateUi","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-after-create-ui.html","searchKeys":["onAfterCreateUi","open fun onAfterCreateUi(screen: Screen, ui: Ui<*>?, context: CircuitContext)","com.slack.circuit.foundation.EventListener.onAfterCreateUi"]},{"name":"open fun onBeforeCreatePresenter(screen: Screen, navigator: Navigator, context: CircuitContext)","description":"com.slack.circuit.foundation.EventListener.onBeforeCreatePresenter","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-before-create-presenter.html","searchKeys":["onBeforeCreatePresenter","open fun onBeforeCreatePresenter(screen: Screen, navigator: Navigator, context: CircuitContext)","com.slack.circuit.foundation.EventListener.onBeforeCreatePresenter"]},{"name":"open fun onBeforeCreateUi(screen: Screen, context: CircuitContext)","description":"com.slack.circuit.foundation.EventListener.onBeforeCreateUi","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-before-create-ui.html","searchKeys":["onBeforeCreateUi","open fun onBeforeCreateUi(screen: Screen, context: CircuitContext)","com.slack.circuit.foundation.EventListener.onBeforeCreateUi"]},{"name":"open fun onDisposeContent()","description":"com.slack.circuit.foundation.EventListener.onDisposeContent","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-dispose-content.html","searchKeys":["onDisposeContent","open fun onDisposeContent()","com.slack.circuit.foundation.EventListener.onDisposeContent"]},{"name":"open fun onDisposePresent()","description":"com.slack.circuit.foundation.EventListener.onDisposePresent","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-dispose-present.html","searchKeys":["onDisposePresent","open fun onDisposePresent()","com.slack.circuit.foundation.EventListener.onDisposePresent"]},{"name":"open fun onStartContent()","description":"com.slack.circuit.foundation.EventListener.onStartContent","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-start-content.html","searchKeys":["onStartContent","open fun onStartContent()","com.slack.circuit.foundation.EventListener.onStartContent"]},{"name":"open fun onStartPresent()","description":"com.slack.circuit.foundation.EventListener.onStartPresent","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-start-present.html","searchKeys":["onStartPresent","open fun onStartPresent()","com.slack.circuit.foundation.EventListener.onStartPresent"]},{"name":"open fun onState(state: CircuitUiState)","description":"com.slack.circuit.foundation.EventListener.onState","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-state.html","searchKeys":["onState","open fun onState(state: CircuitUiState)","com.slack.circuit.foundation.EventListener.onState"]},{"name":"open fun onUnavailableContent(screen: Screen, presenter: Presenter<*>?, ui: Ui<*>?, context: CircuitContext)","description":"com.slack.circuit.foundation.EventListener.onUnavailableContent","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-unavailable-content.html","searchKeys":["onUnavailableContent","open fun onUnavailableContent(screen: Screen, presenter: Presenter<*>?, ui: Ui<*>?, context: CircuitContext)","com.slack.circuit.foundation.EventListener.onUnavailableContent"]},{"name":"open fun start()","description":"com.slack.circuit.foundation.EventListener.start","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/start.html","searchKeys":["start","open fun start()","com.slack.circuit.foundation.EventListener.start"]},{"name":"open override fun <T> DecoratedContent(arg: T, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","description":"com.slack.circuit.foundation.NavigatorDefaults.DefaultDecoration.DecoratedContent","location":"circuit-foundation/com.slack.circuit.foundation/-navigator-defaults/-default-decoration/-decorated-content.html","searchKeys":["DecoratedContent","open override fun <T> DecoratedContent(arg: T, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","com.slack.circuit.foundation.NavigatorDefaults.DefaultDecoration.DecoratedContent"]},{"name":"open override fun <T> DecoratedContent(arg: T, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","description":"com.slack.circuit.foundation.NavigatorDefaults.EmptyDecoration.DecoratedContent","location":"circuit-foundation/com.slack.circuit.foundation/-navigator-defaults/-empty-decoration/-decorated-content.html","searchKeys":["DecoratedContent","open override fun <T> DecoratedContent(arg: T, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","com.slack.circuit.foundation.NavigatorDefaults.EmptyDecoration.DecoratedContent"]},{"name":"val LocalCircuitConfig: ProvidableCompositionLocal<CircuitConfig?>","description":"com.slack.circuit.foundation.LocalCircuitConfig","location":"circuit-foundation/com.slack.circuit.foundation/-local-circuit-config.html","searchKeys":["LocalCircuitConfig","val LocalCircuitConfig: ProvidableCompositionLocal<CircuitConfig?>","com.slack.circuit.foundation.LocalCircuitConfig"]},{"name":"val NONE: EventListener","description":"com.slack.circuit.foundation.EventListener.Companion.NONE","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/-companion/-n-o-n-e.html","searchKeys":["NONE","val NONE: EventListener","com.slack.circuit.foundation.EventListener.Companion.NONE"]},{"name":"val SaveableBackStack.Record.screen: Screen","description":"com.slack.circuit.foundation.screen","location":"circuit-foundation/com.slack.circuit.foundation/screen.html","searchKeys":["screen","val SaveableBackStack.Record.screen: Screen","com.slack.circuit.foundation.screen"]},{"name":"val defaultNavDecoration: NavDecoration","description":"com.slack.circuit.foundation.CircuitConfig.defaultNavDecoration","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/default-nav-decoration.html","searchKeys":["defaultNavDecoration","val defaultNavDecoration: NavDecoration","com.slack.circuit.foundation.CircuitConfig.defaultNavDecoration"]},{"name":"val onUnavailableContent: (screen: Screen, modifier: Modifier) -> Unit","description":"com.slack.circuit.foundation.CircuitConfig.onUnavailableContent","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/on-unavailable-content.html","searchKeys":["onUnavailableContent","val onUnavailableContent: (screen: Screen, modifier: Modifier) -> Unit","com.slack.circuit.foundation.CircuitConfig.onUnavailableContent"]},{"name":"val presenterFactories: MutableList<Presenter.Factory>","description":"com.slack.circuit.foundation.CircuitConfig.Builder.presenterFactories","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/presenter-factories.html","searchKeys":["presenterFactories","val presenterFactories: MutableList<Presenter.Factory>","com.slack.circuit.foundation.CircuitConfig.Builder.presenterFactories"]},{"name":"val uiFactories: MutableList<Ui.Factory>","description":"com.slack.circuit.foundation.CircuitConfig.Builder.uiFactories","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/ui-factories.html","searchKeys":["uiFactories","val uiFactories: MutableList<Ui.Factory>","com.slack.circuit.foundation.CircuitConfig.Builder.uiFactories"]},{"name":"var CircuitContext.config: CircuitConfig","description":"com.slack.circuit.foundation.config","location":"circuit-foundation/com.slack.circuit.foundation/config.html","searchKeys":["config","var CircuitContext.config: CircuitConfig","com.slack.circuit.foundation.config"]},{"name":"var defaultNavDecoration: NavDecoration","description":"com.slack.circuit.foundation.CircuitConfig.Builder.defaultNavDecoration","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/default-nav-decoration.html","searchKeys":["defaultNavDecoration","var defaultNavDecoration: NavDecoration","com.slack.circuit.foundation.CircuitConfig.Builder.defaultNavDecoration"]},{"name":"var eventListenerFactory: EventListener.Factory?","description":"com.slack.circuit.foundation.CircuitConfig.Builder.eventListenerFactory","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/event-listener-factory.html","searchKeys":["eventListenerFactory","var eventListenerFactory: EventListener.Factory?","com.slack.circuit.foundation.CircuitConfig.Builder.eventListenerFactory"]},{"name":"var onUnavailableContent: (screen: Screen, modifier: Modifier) -> Unit","description":"com.slack.circuit.foundation.CircuitConfig.Builder.onUnavailableContent","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-config/-builder/on-unavailable-content.html","searchKeys":["onUnavailableContent","var onUnavailableContent: (screen: Screen, modifier: Modifier) -> Unit","com.slack.circuit.foundation.CircuitConfig.Builder.onUnavailableContent"]},{"name":"annotation class CircuitInject(val screen: KClass<out Screen>, val scope: KClass<*>)","description":"com.slack.circuit.codegen.annotations.CircuitInject","location":"circuit-codegen-annotations/com.slack.circuit.codegen.annotations/-circuit-inject/index.html","searchKeys":["CircuitInject","annotation class CircuitInject(val screen: KClass<out Screen>, val scope: KClass<*>)","com.slack.circuit.codegen.annotations.CircuitInject"]},{"name":"val scope: KClass<*>","description":"com.slack.circuit.codegen.annotations.CircuitInject.scope","location":"circuit-codegen-annotations/com.slack.circuit.codegen.annotations/-circuit-inject/scope.html","searchKeys":["scope","val scope: KClass<*>","com.slack.circuit.codegen.annotations.CircuitInject.scope"]},{"name":"val screen: KClass<out Screen>","description":"com.slack.circuit.codegen.annotations.CircuitInject.screen","location":"circuit-codegen-annotations/com.slack.circuit.codegen.annotations/-circuit-inject/screen.html","searchKeys":["screen","val screen: KClass<out Screen>","com.slack.circuit.codegen.annotations.CircuitInject.screen"]},{"name":"abstract fun <T> DecoratedContent(arg: T, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","description":"com.slack.circuit.backstack.NavDecoration.DecoratedContent","location":"backstack/com.slack.circuit.backstack/-nav-decoration/-decorated-content.html","searchKeys":["DecoratedContent","abstract fun <T> DecoratedContent(arg: T, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","com.slack.circuit.backstack.NavDecoration.DecoratedContent"]},{"name":"abstract fun pop(): R?","description":"com.slack.circuit.backstack.BackStack.pop","location":"backstack/com.slack.circuit.backstack/-back-stack/pop.html","searchKeys":["pop","abstract fun pop(): R?","com.slack.circuit.backstack.BackStack.pop"]},{"name":"abstract fun provideValues(): List<ProvidedValue<*>>","description":"com.slack.circuit.backstack.ProvidedValues.provideValues","location":"backstack/com.slack.circuit.backstack/-provided-values/provide-values.html","searchKeys":["provideValues","abstract fun provideValues(): List<ProvidedValue<*>>","com.slack.circuit.backstack.ProvidedValues.provideValues"]},{"name":"abstract fun providedValuesFor(record: R): ProvidedValues","description":"com.slack.circuit.backstack.BackStackRecordLocalProvider.providedValuesFor","location":"backstack/com.slack.circuit.backstack/-back-stack-record-local-provider/provided-values-for.html","searchKeys":["providedValuesFor","abstract fun providedValuesFor(record: R): ProvidedValues","com.slack.circuit.backstack.BackStackRecordLocalProvider.providedValuesFor"]},{"name":"abstract val key: String","description":"com.slack.circuit.backstack.BackStack.Record.key","location":"backstack/com.slack.circuit.backstack/-back-stack/-record/key.html","searchKeys":["key","abstract val key: String","com.slack.circuit.backstack.BackStack.Record.key"]},{"name":"abstract val route: String","description":"com.slack.circuit.backstack.BackStack.Record.route","location":"backstack/com.slack.circuit.backstack/-back-stack/-record/route.html","searchKeys":["route","abstract val route: String","com.slack.circuit.backstack.BackStack.Record.route"]},{"name":"abstract val size: Int","description":"com.slack.circuit.backstack.BackStack.size","location":"backstack/com.slack.circuit.backstack/-back-stack/size.html","searchKeys":["size","abstract val size: Int","com.slack.circuit.backstack.BackStack.size"]},{"name":"class SaveableBackStack : BackStack<SaveableBackStack.Record> ","description":"com.slack.circuit.backstack.SaveableBackStack","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/index.html","searchKeys":["SaveableBackStack","class SaveableBackStack : BackStack<SaveableBackStack.Record> ","com.slack.circuit.backstack.SaveableBackStack"]},{"name":"constructor()","description":"com.slack.circuit.backstack.SaveableBackStack.SaveableBackStack","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-saveable-back-stack.html","searchKeys":["SaveableBackStack","constructor()","com.slack.circuit.backstack.SaveableBackStack.SaveableBackStack"]},{"name":"constructor(route: String, args: Map<String, Any?> = emptyMap(), key: String = uuid4().toString())","description":"com.slack.circuit.backstack.SaveableBackStack.Record.Record","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-record/-record.html","searchKeys":["Record","constructor(route: String, args: Map<String, Any?> = emptyMap(), key: String = uuid4().toString())","com.slack.circuit.backstack.SaveableBackStack.Record.Record"]},{"name":"data class Record(val route: String, val args: Map<String, Any?> = emptyMap(), val key: String = uuid4().toString()) : BackStack.Record","description":"com.slack.circuit.backstack.SaveableBackStack.Record","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-record/index.html","searchKeys":["Record","data class Record(val route: String, val args: Map<String, Any?> = emptyMap(), val key: String = uuid4().toString()) : BackStack.Record","com.slack.circuit.backstack.SaveableBackStack.Record"]},{"name":"fun <R : BackStack.Record> providedValuesForBackStack(backStack: BackStack<R>, stackLocalProviders: List<BackStackRecordLocalProvider<R>> = emptyList(), includeDefaults: Boolean = true): Map<R, ProvidedValues>","description":"com.slack.circuit.backstack.providedValuesForBackStack","location":"backstack/com.slack.circuit.backstack/provided-values-for-back-stack.html","searchKeys":["providedValuesForBackStack","fun <R : BackStack.Record> providedValuesForBackStack(backStack: BackStack<R>, stackLocalProviders: List<BackStackRecordLocalProvider<R>> = emptyList(), includeDefaults: Boolean = true): Map<R, ProvidedValues>","com.slack.circuit.backstack.providedValuesForBackStack"]},{"name":"fun SaveableBackStack.push(route: String, args: Map<String, Any?> = emptyMap())","description":"com.slack.circuit.backstack.push","location":"backstack/com.slack.circuit.backstack/push.html","searchKeys":["push","fun SaveableBackStack.push(route: String, args: Map<String, Any?> = emptyMap())","com.slack.circuit.backstack.push"]},{"name":"fun interface BackStackRecordLocalProvider<in R : BackStack.Record>","description":"com.slack.circuit.backstack.BackStackRecordLocalProvider","location":"backstack/com.slack.circuit.backstack/-back-stack-record-local-provider/index.html","searchKeys":["BackStackRecordLocalProvider","fun interface BackStackRecordLocalProvider<in R : BackStack.Record>","com.slack.circuit.backstack.BackStackRecordLocalProvider"]},{"name":"fun interface ProvidedValues","description":"com.slack.circuit.backstack.ProvidedValues","location":"backstack/com.slack.circuit.backstack/-provided-values/index.html","searchKeys":["ProvidedValues","fun interface ProvidedValues","com.slack.circuit.backstack.ProvidedValues"]},{"name":"fun push(record: SaveableBackStack.Record)","description":"com.slack.circuit.backstack.SaveableBackStack.push","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/push.html","searchKeys":["push","fun push(record: SaveableBackStack.Record)","com.slack.circuit.backstack.SaveableBackStack.push"]},{"name":"fun rememberSaveableBackStack(init: SaveableBackStack.() -> Unit): SaveableBackStack","description":"com.slack.circuit.backstack.rememberSaveableBackStack","location":"backstack/com.slack.circuit.backstack/remember-saveable-back-stack.html","searchKeys":["rememberSaveableBackStack","fun rememberSaveableBackStack(init: SaveableBackStack.() -> Unit): SaveableBackStack","com.slack.circuit.backstack.rememberSaveableBackStack"]},{"name":"inline fun SaveableBackStack.popUntil(predicate: (SaveableBackStack.Record) -> Boolean)","description":"com.slack.circuit.backstack.popUntil","location":"backstack/com.slack.circuit.backstack/pop-until.html","searchKeys":["popUntil","inline fun SaveableBackStack.popUntil(predicate: (SaveableBackStack.Record) -> Boolean)","com.slack.circuit.backstack.popUntil"]},{"name":"interface BackStack<R : BackStack.Record> : Iterable<R> ","description":"com.slack.circuit.backstack.BackStack","location":"backstack/com.slack.circuit.backstack/-back-stack/index.html","searchKeys":["BackStack","interface BackStack<R : BackStack.Record> : Iterable<R> ","com.slack.circuit.backstack.BackStack"]},{"name":"interface NavDecoration","description":"com.slack.circuit.backstack.NavDecoration","location":"backstack/com.slack.circuit.backstack/-nav-decoration/index.html","searchKeys":["NavDecoration","interface NavDecoration","com.slack.circuit.backstack.NavDecoration"]},{"name":"interface Record","description":"com.slack.circuit.backstack.BackStack.Record","location":"backstack/com.slack.circuit.backstack/-back-stack/-record/index.html","searchKeys":["Record","interface Record","com.slack.circuit.backstack.BackStack.Record"]},{"name":"object SaveableStateRegistryBackStackRecordLocalProvider : BackStackRecordLocalProvider<BackStack.Record> ","description":"com.slack.circuit.backstack.SaveableStateRegistryBackStackRecordLocalProvider","location":"backstack/com.slack.circuit.backstack/-saveable-state-registry-back-stack-record-local-provider/index.html","searchKeys":["SaveableStateRegistryBackStackRecordLocalProvider","object SaveableStateRegistryBackStackRecordLocalProvider : BackStackRecordLocalProvider<BackStack.Record> ","com.slack.circuit.backstack.SaveableStateRegistryBackStackRecordLocalProvider"]},{"name":"open operator override fun iterator(): Iterator<SaveableBackStack.Record>","description":"com.slack.circuit.backstack.SaveableBackStack.iterator","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<SaveableBackStack.Record>","com.slack.circuit.backstack.SaveableBackStack.iterator"]},{"name":"open override fun pop(): SaveableBackStack.Record?","description":"com.slack.circuit.backstack.SaveableBackStack.pop","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/pop.html","searchKeys":["pop","open override fun pop(): SaveableBackStack.Record?","com.slack.circuit.backstack.SaveableBackStack.pop"]},{"name":"open override fun providedValuesFor(record: BackStack.Record): ProvidedValues","description":"com.slack.circuit.backstack.SaveableStateRegistryBackStackRecordLocalProvider.providedValuesFor","location":"backstack/com.slack.circuit.backstack/-saveable-state-registry-back-stack-record-local-provider/provided-values-for.html","searchKeys":["providedValuesFor","open override fun providedValuesFor(record: BackStack.Record): ProvidedValues","com.slack.circuit.backstack.SaveableStateRegistryBackStackRecordLocalProvider.providedValuesFor"]},{"name":"open override val key: String","description":"com.slack.circuit.backstack.SaveableBackStack.Record.key","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-record/key.html","searchKeys":["key","open override val key: String","com.slack.circuit.backstack.SaveableBackStack.Record.key"]},{"name":"open override val route: String","description":"com.slack.circuit.backstack.SaveableBackStack.Record.route","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-record/route.html","searchKeys":["route","open override val route: String","com.slack.circuit.backstack.SaveableBackStack.Record.route"]},{"name":"open override val size: Int","description":"com.slack.circuit.backstack.SaveableBackStack.size","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/size.html","searchKeys":["size","open override val size: Int","com.slack.circuit.backstack.SaveableBackStack.size"]},{"name":"val BackStack<*>.isAtRoot: Boolean","description":"com.slack.circuit.backstack.isAtRoot","location":"backstack/com.slack.circuit.backstack/is-at-root.html","searchKeys":["isAtRoot","val BackStack<*>.isAtRoot: Boolean","com.slack.circuit.backstack.isAtRoot"]},{"name":"val BackStack<*>.isEmpty: Boolean","description":"com.slack.circuit.backstack.isEmpty","location":"backstack/com.slack.circuit.backstack/is-empty.html","searchKeys":["isEmpty","val BackStack<*>.isEmpty: Boolean","com.slack.circuit.backstack.isEmpty"]},{"name":"val args: Map<String, Any?>","description":"com.slack.circuit.backstack.SaveableBackStack.Record.args","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-record/args.html","searchKeys":["args","val args: Map<String, Any?>","com.slack.circuit.backstack.SaveableBackStack.Record.args"]},{"name":"val topRecord: SaveableBackStack.Record?","description":"com.slack.circuit.backstack.SaveableBackStack.topRecord","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/top-record.html","searchKeys":["topRecord","val topRecord: SaveableBackStack.Record?","com.slack.circuit.backstack.SaveableBackStack.topRecord"]},{"name":"abstract fun goTo(screen: Screen)","description":"com.slack.circuit.runtime.Navigator.goTo","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/go-to.html","searchKeys":["goTo","abstract fun goTo(screen: Screen)","com.slack.circuit.runtime.Navigator.goTo"]},{"name":"abstract fun pop(): Screen?","description":"com.slack.circuit.runtime.Navigator.pop","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/pop.html","searchKeys":["pop","abstract fun pop(): Screen?","com.slack.circuit.runtime.Navigator.pop"]},{"name":"abstract fun resetRoot(newRoot: Screen): List<Screen>","description":"com.slack.circuit.runtime.Navigator.resetRoot","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/reset-root.html","searchKeys":["resetRoot","abstract fun resetRoot(newRoot: Screen): List<Screen>","com.slack.circuit.runtime.Navigator.resetRoot"]},{"name":"annotation class InternalCircuitApi","description":"com.slack.circuit.runtime.InternalCircuitApi","location":"circuit-runtime/com.slack.circuit.runtime/-internal-circuit-api/index.html","searchKeys":["InternalCircuitApi","annotation class InternalCircuitApi","com.slack.circuit.runtime.InternalCircuitApi"]},{"name":"class CircuitContext constructor(val parent: CircuitContext?)","description":"com.slack.circuit.runtime.CircuitContext","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/index.html","searchKeys":["CircuitContext","class CircuitContext constructor(val parent: CircuitContext?)","com.slack.circuit.runtime.CircuitContext"]},{"name":"constructor(parent: CircuitContext?)","description":"com.slack.circuit.runtime.CircuitContext.CircuitContext","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/-circuit-context.html","searchKeys":["CircuitContext","constructor(parent: CircuitContext?)","com.slack.circuit.runtime.CircuitContext.CircuitContext"]},{"name":"expect interface Screen","description":"com.slack.circuit.runtime.Screen","location":"circuit-runtime/com.slack.circuit.runtime/-screen/index.html","searchKeys":["Screen","expect interface Screen","com.slack.circuit.runtime.Screen"]},{"name":"fun <S : Any, T : S> putTag(type: KClass<S>, tag: T?)","description":"com.slack.circuit.runtime.CircuitContext.putTag","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/put-tag.html","searchKeys":["putTag","fun <S : Any, T : S> putTag(type: KClass<S>, tag: T?)","com.slack.circuit.runtime.CircuitContext.putTag"]},{"name":"fun <T : Any> tag(type: KClass<T>): T?","description":"com.slack.circuit.runtime.CircuitContext.tag","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/tag.html","searchKeys":["tag","fun <T : Any> tag(type: KClass<T>): T?","com.slack.circuit.runtime.CircuitContext.tag"]},{"name":"fun Navigator.popUntil(predicate: (Screen) -> Boolean)","description":"com.slack.circuit.runtime.popUntil","location":"circuit-runtime/com.slack.circuit.runtime/pop-until.html","searchKeys":["popUntil","fun Navigator.popUntil(predicate: (Screen) -> Boolean)","com.slack.circuit.runtime.popUntil"]},{"name":"fun clearTags()","description":"com.slack.circuit.runtime.CircuitContext.clearTags","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/clear-tags.html","searchKeys":["clearTags","fun clearTags()","com.slack.circuit.runtime.CircuitContext.clearTags"]},{"name":"inline fun <T : Any> putTag(tag: T?)","description":"com.slack.circuit.runtime.CircuitContext.putTag","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/put-tag.html","searchKeys":["putTag","inline fun <T : Any> putTag(tag: T?)","com.slack.circuit.runtime.CircuitContext.putTag"]},{"name":"inline fun <T : Any> tag(): T?","description":"com.slack.circuit.runtime.CircuitContext.tag","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/tag.html","searchKeys":["tag","inline fun <T : Any> tag(): T?","com.slack.circuit.runtime.CircuitContext.tag"]},{"name":"interface CircuitUiEvent","description":"com.slack.circuit.runtime.CircuitUiEvent","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-ui-event/index.html","searchKeys":["CircuitUiEvent","interface CircuitUiEvent","com.slack.circuit.runtime.CircuitUiEvent"]},{"name":"interface CircuitUiState","description":"com.slack.circuit.runtime.CircuitUiState","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-ui-state/index.html","searchKeys":["CircuitUiState","interface CircuitUiState","com.slack.circuit.runtime.CircuitUiState"]},{"name":"interface Navigator","description":"com.slack.circuit.runtime.Navigator","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/index.html","searchKeys":["Navigator","interface Navigator","com.slack.circuit.runtime.Navigator"]},{"name":"object NoOp : Navigator","description":"com.slack.circuit.runtime.Navigator.NoOp","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/-no-op/index.html","searchKeys":["NoOp","object NoOp : Navigator","com.slack.circuit.runtime.Navigator.NoOp"]},{"name":"open override fun goTo(screen: Screen)","description":"com.slack.circuit.runtime.Navigator.NoOp.goTo","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/-no-op/go-to.html","searchKeys":["goTo","open override fun goTo(screen: Screen)","com.slack.circuit.runtime.Navigator.NoOp.goTo"]},{"name":"open override fun pop(): Screen?","description":"com.slack.circuit.runtime.Navigator.NoOp.pop","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/-no-op/pop.html","searchKeys":["pop","open override fun pop(): Screen?","com.slack.circuit.runtime.Navigator.NoOp.pop"]},{"name":"open override fun resetRoot(newRoot: Screen): List<Screen>","description":"com.slack.circuit.runtime.Navigator.NoOp.resetRoot","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/-no-op/reset-root.html","searchKeys":["resetRoot","open override fun resetRoot(newRoot: Screen): List<Screen>","com.slack.circuit.runtime.Navigator.NoOp.resetRoot"]},{"name":"val parent: CircuitContext?","description":"com.slack.circuit.runtime.CircuitContext.parent","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/parent.html","searchKeys":["parent","val parent: CircuitContext?","com.slack.circuit.runtime.CircuitContext.parent"]}]